openapi: "3.0.0"
info:
  version: 1.0.0
  title: Finn.ai Challenge
servers:
  - url: https://finntest.commitzero.com/v1
paths:
  /ID:
    post:
      summary: Create a new UUID. This is a POST rather than GET as requested, as it is creating a new ID which could be a non-idempotent operation, so may not make sense as a GET.
      operationId: createID
      tags:
        - users
      responses:
        '200':
          description: A new UUID
          content:
            application/json:
              schema:
                required:
                  - id
                properties:
                  id:
                    type: string
                    format: uuid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/{userId}:
    get:
      summary: Get user details
      operationId: loadUserById
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '201':
          description: Return the created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /status/alive:
    get:
      summary: Kubernetes liveness check
      operationId: livenessCheck
      tags:
        - status
      responses:
        '200':
          description: Expected response to a valid request

  /status/ready:
    get:
      summary: Kubernetes readiness check
      operationId: readinessCheck
      tags:
        - status
      responses:
        '200':
          description: Expected response to a valid request

components:
  schemas:
    User:
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    UpdateUser:
      required:
        - name
      properties:
        name:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
